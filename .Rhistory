####################Graphs
library(ggplot2)
############Imbalanced poster (done)
My.Data12 <- data.frame(Match = factor(c(1,2,1,2,1,2)), LookingTime = c( 3.64, 3.67, 4.57, 2.71, 2.69, 4.65), SE=c( .180,.190, .223, .230, .217, .237), Salience = factor(c(1,1,2,2,3,3)))
Bar<-ggplot(My.Data12, aes(x=Salience, y=LookingTime, fill=Match))+
geom_bar(aes(fill=Match),stat="identity", position="dodge")+
geom_bar(aes(fill=Match),stat="identity", colour="black", position="dodge",show.legend=FALSE)+xlab("")+
ylab("Mean looking time (s)\n")+
geom_errorbar(aes(ymin=LookingTime, ymax=LookingTime+SE),width=.2,position=position_dodge(.9))+ theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line.x = element_line(color="black", size = .5),
axis.line.y = element_line(color="black", size = .5),legend.position = "top")+
scale_x_discrete(breaks=c("1", "2", "3"), labels=c("Overall","High", "Low"))
Bar+coord_cartesian(ylim=c(0, 5))+scale_fill_manual(values=c("#32CD32", "Red"),guide = guide_legend(title = ""),labels=c("Target", "Distractor"))+
scale_y_continuous(breaks=c(0,.5,1.0,1.5,2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5), expand = c(0,0))
# Use this script for the Exp 2a Tseltal Dataset
library(dplyr)
library(ggpubr)
library(ggplot2)
library(lme4)
library(lmerTest)
library(emmeans)
library(sjPlot)
library(gridExtra)
theme_set(theme_pubr())
# call in the data
all.data.raw=read.csv(file = 'clean_data/Exp2b_Tseltal_add_clean.csv',header=T)
all.data.raw2=read.csv(file = 'clean_data/Exp2b_Tseltal_affect_clean.csv',header=T)
all.data <- merge(x = all.data.raw, y = all.data.raw2,
by = c("ID", "recording", "part"))
# export the data file as a single csv
#write.csv(all.data1, "clean_data/all.data1.csv", row.names = FALSE)
# sets variables as factors
all.data$recording<-factor(all.data$recording)
all.data$participant<-factor(all.data$participant)
all.data$participant2<-factor(all.data$participant2)
all.data$ID<-factor(all.data$ID)
all.data$AddresseeT<-factor(all.data$nat_inf_label)
all.data$rater_label<-factor(all.data$rater_label)
# Label accuracy
all.data$accuracy[all.data$rater_label=="ads" &
all.data$AddresseeT=="A"] <- 1
all.data$accuracy[all.data$rater_label=="cds" &
all.data$AddresseeT=="T"] <- 1
all.data$accuracy[all.data$rater_label=="cds" &
all.data$AddresseeT=="C"] <- 1
all.data$accuracy[all.data$rater_label=="cds" &
all.data$AddresseeT=="A"] <- 0
all.data$accuracy[all.data$rater_label=="ads" &
all.data$AddresseeT=="T"] <- 0
all.data$accuracy[all.data$rater_label=="ads" &
all.data$AddresseeT=="C"] <- 0
# collapse C and T in Native Informer label
all.data$Addressee[all.data$AddresseeT=="A"] <- "A"
all.data$Addressee[all.data$AddresseeT=="C"] <- "C"
all.data$Addressee[all.data$AddresseeT=="T"] <- "C"
all.data$Addressee <- factor(c(all.data$Addressee), labels = c("ads","cds"))
#makes numeric Addressee variable (cds= 0 and ads = 1)
all.data$Addressee.num[all.data$Addressee=="ads"] <- 1
all.data$Addressee.num[all.data$Addressee=="cds"] <- 0
# build affect variables
# happy factor for model
all.data$Happy[all.data$happy=="0"] <- 'Neutral'
all.data$Happy[all.data$happy=="1"] <- 'Little'
all.data$Happy[all.data$happy=="2"] <- 'Some'
all.data$Happy[all.data$happy=="3"] <- 'More'
all.data$Happy[all.data$happy=="4"] <- 'Extremely'
all.data$Happy<-factor(c(all.data$Happy), levels = c("Neutral", "Little","Some","More","Extremely"))
#all.data$Happy<-relevel(all.data$Happy, "Some")
# sooth factor for model
all.data$Sooth[all.data$sooth=="0"] <- 'Neutral'
all.data$Sooth[all.data$sooth=="1"] <- 'Little'
all.data$Sooth[all.data$sooth=="2"] <- 'Some'
all.data$Sooth[all.data$sooth=="3"] <- 'More'
all.data$Sooth[all.data$sooth=="4"] <- 'Extremely'
all.data$Sooth<-factor(c(all.data$Sooth), levels = c("Neutral", "Little","Some","More","Extremely"))
#all.data$Sooth<-relevel(all.data$Sooth, "Some")
# love factor for model
all.data$Love[all.data$love=="0"] <- 'Neutral'
all.data$Love[all.data$love=="1"] <- 'Little'
all.data$Love[all.data$love=="2"] <- 'Some'
all.data$Love[all.data$love=="3"] <- 'More'
all.data$Love[all.data$love=="4"] <- 'Extremely'
all.data$Love<-factor(c(all.data$Love), levels = c("Neutral", "Little","Some","More","Extremely"))
#all.data$Love<-relevel(all.data$Love, "Some")
# exaggerated factor for model
all.data$Exaggerated[all.data$exaggerate=="0"] <- 'Neutral'
all.data$Exaggerated[all.data$exaggerate=="1"] <- 'Little'
all.data$Exaggerated[all.data$exaggerate=="2"] <- 'Some'
all.data$Exaggerated[all.data$exaggerate=="3"] <- 'More'
all.data$Exaggerated[all.data$exaggerate=="4"] <- 'Extremely'
all.data$Exaggerated<-factor(c(all.data$Exaggerated), levels = c("Neutral", "Little","Some","More","Extremely"))
#all.data$Exaggerated<-relevel(all.data$Exaggerated, "Some")
# confidence variable
con.count<-ggplot(all.data, aes(confidence.x)) +
geom_bar(fill = "#0073C2FF") +
theme_pubclean()
con.count
con.count.num <- all.data %>%
group_by(confidence.x) %>%
summarise(counts = n())
con.count.num
############demographics and analyses
# Accuracy means by group
mean(all.data$accuracy)
median(all.data$accuracy)
range(all.data$accuracy)
sd(all.data$accuracy)
# C and T are collapsed
acc.means.TisC<-all.data %>%
group_by(Addressee) %>%
summarise_at(vars(accuracy), list(name = mean))
acc.means.TisC
acc.sd.TisC<-all.data %>%
group_by(Addressee) %>%
summarise_at(vars(accuracy), list(name = sd))
acc.sd.TisC
con.means<-all.data %>%
group_by(Addressee) %>%
summarise_at(vars(confidence.x), list(name = mean))
con.means
# Breaks out C and T
acc.means<-all.data %>%
group_by(AddresseeT) %>%
summarise_at(vars(accuracy), list(name = mean))
acc.means
con.means<-all.data %>%
group_by(AddresseeT) %>%
summarise_at(vars(confidence.x), list(name = mean))
con.means
#########MODELS
###accuracy model T is C
#accuracy model with positive affect interactions
accuracy2.model<-glmer(accuracy~1 + Addressee +
confidence.x +
Happy +
Sooth +
Love +
Exaggerated +
Addressee*Happy +
Addressee*Sooth +
Addressee*Love +
Addressee*Exaggerated +
#(1|participantF)+
(1|recording),
data = all.data,
family = binomial (link = 'logit'))
summary(accuracy2.model)
tab_model(accuracy2.model, show.se = TRUE)
#Happy Contrasts
emmeans_results_happy <- emmeans(accuracy2.model, ~ Addressee*Happy)
#emmeans_results_happy
#pairs(emmeans_results)
#contrast(emmeans_results, "revpairwise", by="nat_inf_labelF",adjust="bonferroni")
contrast(emmeans_results_happy, "revpairwise", by="Happy",adjust="bonferroni")
p1<-emmip(accuracy2.model, Addressee ~ Happy, CIs=TRUE, plotit=T)+theme_bw()
#Love Contrasts
emmeans_results_love <- emmeans(accuracy2.model, ~ Addressee*Love)
#emmeans_results_love
#pairs(emmeans_results)
#contrast(emmeans_results, "revpairwise", by="nat_inf_labelF",adjust="bonferroni")
contrast(emmeans_results_love, "revpairwise", by="Love",adjust="bonferroni")
p2<-emmip(accuracy2.model, Addressee ~ Love, CIs=TRUE, plotit=T)+theme_bw()
#Sooth Contrasts
emmeans_results_sooth <- emmeans(accuracy2.model, ~ Addressee*Sooth)
#emmeans_results_sooth
#pairs(emmeans_results)
#contrast(emmeans_results, "revpairwise", by="nat_inf_labelF",adjust="bonferroni")
contrast(emmeans_results_sooth, "revpairwise", by="Sooth",adjust="bonferroni")
p3<-emmip(accuracy2.model, Addressee ~ Sooth, CIs=TRUE, plotit=T)+theme_bw()
#exaggerated contrasts
emmeans_results_exag <- emmeans(accuracy2.model, ~ Addressee*Exaggerated)
#emmeans_results_exag
#pairs(emmeans_results)
#contrast(emmeans_results, "revpairwise", by="nat_inf_labelF",adjust="bonferroni")
contrast(emmeans_results_exag, "revpairwise", by="Exaggerated",adjust="bonferroni")
p4<-emmip(accuracy2.model, Addressee ~ Exaggerated, CIs=TRUE, plotit=T)+theme_bw()
#puts all the interaction plots together
grid.arrange(p1,p2,p3,p4, nrow = 2)
setwd("~/Documents/GitHub/LabellingPaperData2020")
library(dplyr)
library(ggpubr)
library(ggplot2)
library(lme4)
library(lmerTest)
library(emmeans)
library(sjPlot)
library(gridExtra)
theme_set(theme_pubr())
# call in the data
all.data.raw=read.csv(file = 'clean_data/Exp2b_Tseltal_add_clean.csv',header=T)
all.data.raw2=read.csv(file = 'clean_data/Exp2b_Tseltal_affect_clean.csv',header=T)
all.data <- merge(x = all.data.raw, y = all.data.raw2,
by = c("ID", "recording", "part"))
all.data$recording<-factor(all.data$recording)
all.data$participant<-factor(all.data$participant)
all.data$participant2<-factor(all.data$participant2)
all.data$ID<-factor(all.data$ID)
all.data$AddresseeT<-factor(all.data$nat_inf_label)
all.data$rater_label<-factor(all.data$rater_label)
# Label accuracy
all.data$accuracy[all.data$rater_label=="ads" &
all.data$AddresseeT=="A"] <- 1
all.data$accuracy[all.data$rater_label=="cds" &
all.data$AddresseeT=="T"] <- 1
all.data$accuracy[all.data$rater_label=="cds" &
all.data$AddresseeT=="C"] <- 1
all.data$accuracy[all.data$rater_label=="cds" &
all.data$AddresseeT=="A"] <- 0
all.data$accuracy[all.data$rater_label=="ads" &
all.data$AddresseeT=="T"] <- 0
all.data$accuracy[all.data$rater_label=="ads" &
all.data$AddresseeT=="C"] <- 0
# collapse C and T in Native Informer label
all.data$Addressee[all.data$AddresseeT=="A"] <- "A"
all.data$Addressee[all.data$AddresseeT=="C"] <- "C"
all.data$Addressee[all.data$AddresseeT=="T"] <- "C"
all.data$Addressee <- factor(c(all.data$Addressee), labels = c("ads","cds"))
#makes numeric Addressee variable (cds= 0 and ads = 1)
all.data$Addressee.num[all.data$Addressee=="ads"] <- 1
all.data$Addressee.num[all.data$Addressee=="cds"] <- 0
# build affect variables
# happy factor for model
all.data$Happy[all.data$happy=="0"] <- 'Neutral'
all.data$Happy[all.data$happy=="1"] <- 'Little'
all.data$Happy[all.data$happy=="2"] <- 'Some'
all.data$Happy[all.data$happy=="3"] <- 'More'
all.data$Happy[all.data$happy=="4"] <- 'Extremely'
all.data$Happy<-factor(c(all.data$Happy), levels = c("Neutral", "Little","Some","More","Extremely"))
#all.data$Happy<-relevel(all.data$Happy, "Some")
# sooth factor for model
all.data$Sooth[all.data$sooth=="0"] <- 'Neutral'
all.data$Sooth[all.data$sooth=="1"] <- 'Little'
all.data$Sooth[all.data$sooth=="2"] <- 'Some'
all.data$Sooth[all.data$sooth=="3"] <- 'More'
all.data$Sooth[all.data$sooth=="4"] <- 'Extremely'
all.data$Sooth<-factor(c(all.data$Sooth), levels = c("Neutral", "Little","Some","More","Extremely"))
#all.data$Sooth<-relevel(all.data$Sooth, "Some")
# love factor for model
all.data$Love[all.data$love=="0"] <- 'Neutral'
all.data$Love[all.data$love=="1"] <- 'Little'
all.data$Love[all.data$love=="2"] <- 'Some'
all.data$Love[all.data$love=="3"] <- 'More'
all.data$Love[all.data$love=="4"] <- 'Extremely'
all.data$Love<-factor(c(all.data$Love), levels = c("Neutral", "Little","Some","More","Extremely"))
#all.data$Love<-relevel(all.data$Love, "Some")
# exaggerated factor for model
all.data$Exaggerated[all.data$exaggerate=="0"] <- 'Neutral'
all.data$Exaggerated[all.data$exaggerate=="1"] <- 'Little'
all.data$Exaggerated[all.data$exaggerate=="2"] <- 'Some'
all.data$Exaggerated[all.data$exaggerate=="3"] <- 'More'
all.data$Exaggerated[all.data$exaggerate=="4"] <- 'Extremely'
all.data$Exaggerated<-factor(c(all.data$Exaggerated), levels = c("Neutral", "Little","Some","More","Extremely"))
#all.data$Exaggerated<-relevel(all.data$Exaggerated, "Some")
# confidence variable
con.count<-ggplot(all.data, aes(confidence.x)) +
geom_bar(fill = "#0073C2FF") +
theme_pubclean()
con.count
con.count.num <- all.data %>%
group_by(confidence.x) %>%
summarise(counts = n())
con.count.num
############demographics and analyses
# Accuracy means by group
mean(all.data$accuracy)
median(all.data$accuracy)
range(all.data$accuracy)
sd(all.data$accuracy)
# C and T are collapsed
acc.means.TisC<-all.data %>%
group_by(Addressee) %>%
summarise_at(vars(accuracy), list(name = mean))
acc.means.TisC
acc.sd.TisC<-all.data %>%
group_by(Addressee) %>%
summarise_at(vars(accuracy), list(name = sd))
acc.sd.TisC
con.means<-all.data %>%
group_by(Addressee) %>%
summarise_at(vars(confidence.x), list(name = mean))
con.means
# Breaks out C and T
acc.means<-all.data %>%
group_by(AddresseeT) %>%
summarise_at(vars(accuracy), list(name = mean))
acc.means
con.means<-all.data %>%
group_by(AddresseeT) %>%
summarise_at(vars(confidence.x), list(name = mean))
con.means
#########MODELS
###accuracy model T is C
#accuracy model with positive affect interactions
accuracy2.model<-glmer(accuracy~1 + Addressee +
confidence.x +
Happy +
Sooth +
Love +
Exaggerated +
Addressee*Happy +
Addressee*Sooth +
Addressee*Love +
Addressee*Exaggerated +
#(1|participantF)+
(1|recording),
data = all.data,
family = binomial (link = 'logit'))
summary(accuracy2.model)
tab_model(accuracy2.model, show.se = TRUE)
#Happy Contrasts
emmeans_results_happy <- emmeans(accuracy2.model, ~ Addressee*Happy)
#emmeans_results_happy
#pairs(emmeans_results)
#contrast(emmeans_results, "revpairwise", by="nat_inf_labelF",adjust="bonferroni")
contrast(emmeans_results_happy, "revpairwise", by="Happy",adjust="bonferroni")
p1<-emmip(accuracy2.model, Addressee ~ Happy, CIs=TRUE, plotit=T)+theme_bw()
#Love Contrasts
emmeans_results_love <- emmeans(accuracy2.model, ~ Addressee*Love)
#emmeans_results_love
#pairs(emmeans_results)
#contrast(emmeans_results, "revpairwise", by="nat_inf_labelF",adjust="bonferroni")
contrast(emmeans_results_love, "revpairwise", by="Love",adjust="bonferroni")
p2<-emmip(accuracy2.model, Addressee ~ Love, CIs=TRUE, plotit=T)+theme_bw()
#Sooth Contrasts
emmeans_results_sooth <- emmeans(accuracy2.model, ~ Addressee*Sooth)
#emmeans_results_sooth
#pairs(emmeans_results)
#contrast(emmeans_results, "revpairwise", by="nat_inf_labelF",adjust="bonferroni")
contrast(emmeans_results_sooth, "revpairwise", by="Sooth",adjust="bonferroni")
p3<-emmip(accuracy2.model, Addressee ~ Sooth, CIs=TRUE, plotit=T)+theme_bw()
#exaggerated contrasts
emmeans_results_exag <- emmeans(accuracy2.model, ~ Addressee*Exaggerated)
#emmeans_results_exag
#pairs(emmeans_results)
#contrast(emmeans_results, "revpairwise", by="nat_inf_labelF",adjust="bonferroni")
contrast(emmeans_results_exag, "revpairwise", by="Exaggerated",adjust="bonferroni")
p4<-emmip(accuracy2.model, Addressee ~ Exaggerated, CIs=TRUE, plotit=T)+theme_bw()
#puts all the interaction plots together
grid.arrange(p1,p2,p3,p4, nrow = 2)
grid.arrange(p1,p2,p3,p4, nrow = 2)
addressee.model<-glmer(Addressee.num ~ 1 +
#confidence.x +
Happy +
Sooth +
Love +
Exaggerated +
(1|recording),
data = all.data,
family = binomial (link = 'logit'))
summary(addressee.model)
addressee.model.con<-glmer(Addressee.num ~ 1 +
#confidence.x +
happy +
sooth +
love +
exaggerated +
(1|recording),
data = all.data,
family = binomial (link = 'logit'))
addressee.model.con<-glmer(Addressee.num ~ 1 +
#confidence.x +
happy +
sooth +
love +
exaggerate +
(1|recording),
data = all.data,
family = binomial (link = 'logit'))
summary(addressee.model.com)
summary(addressee.model.con)
con.means<-all.data %>%
group_by(Addressee) %>%
summarise_at(vars(confidence.x), list(name = mean))
con.means
con.count<-ggplot(all.data, aes(confidence.x)) +
geom_bar(fill = "#0073C2FF") +
theme_pubclean()
con.count
con.count.num <- all.data %>%
group_by(confidence.x) %>%
summarise(counts = n())
con.count.num
addressee.model.con<-glmer(Addressee.num ~ 1 +
confidence.x +
happy +
sooth +
love +
exaggerate +
(1|recording),
data = all.data,
family = binomial (link = 'logit'))
summary(addressee.model.con)
# Use this script for the Farci Dataset
library(dplyr)
library(ggpubr)
library(ggplot2)
library(lme4)
library(lmerTest)
library(emmeans)
library(sjPlot)
library(gridExtra)
theme_set(theme_pubr())
# call in the data
all.data.raw=read.csv(file = 'clean_data/Farci_Clean.csv',header=T)
all.data<-subset(all.data.raw, participant != 'SUB15')
# sets variables as factors
all.data$recorded_childF<-factor(all.data$recorded_child)
all.data$participantID<-factor(all.data$participant)
all.data$Addressee<-factor(c(all.data$nat_inf_labeln), labels = c("cds","ads"))
all.data$accuracy[all.data$rater_labeln=="1" &
all.data$nat_inf_labeln=="1"] <- 1
all.data$accuracy[all.data$rater_labeln=="0" &
all.data$nat_inf_labeln=="0"] <- 1
all.data$accuracy[all.data$rater_labeln=="1" &
all.data$nat_inf_labeln=="0"] <- 0
all.data$accuracy[all.data$rater_labeln=="0" &
all.data$nat_inf_labeln=="1"] <- 0
# constant to compare to chance
all.data$constant <- 1
# build affect variables
# happy factor for model
all.data$Happy[all.data$happy=="0"] <- 'Extremely Not'
all.data$Happy[all.data$happy=="1"] <- 'Somewhat Not'
all.data$Happy[all.data$happy=="2"] <- 'Neutral'
all.data$Happy[all.data$happy=="3"] <- 'Somewhat'
all.data$Happy[all.data$happy=="4"] <- 'Extremely'
all.data$Happy<-factor(c(all.data$Happy), levels = c("Neutral", "Extremely Not", "Somewhat Not","Somewhat","Extremely"))
#all.data$Happy<-relevel(all.data$Happy, "Neutral", "Extremely Not", "Somewhat Not", "Somewhat", "Extremely")
# angry factor for model
all.data$Angry[all.data$angry=="0"] <- 'Extremely Not'
all.data$Angry[all.data$angry=="1"] <- 'Somewhat Not'
all.data$Angry[all.data$angry=="2"] <- 'Neutral'
all.data$Angry[all.data$angry=="3"] <- 'Somewhat'
all.data$Angry[all.data$angry=="4"] <- 'Extremely'
all.data$Angry<-factor(c(all.data$Angry), levels = c("Neutral", "Extremely Not", "Somewhat Not","Somewhat","Extremely"))
#all.data$Angry<-relevel(all.data$Angry, "Neutral")
# sad factor for model
all.data$Sad[all.data$sad=="0"] <- 'Extremely Not'
all.data$Sad[all.data$sad=="1"] <- 'Somewhat Not'
all.data$Sad[all.data$sad=="2"] <- 'Neutral'
all.data$Sad[all.data$sad=="3"] <- 'Somewhat'
all.data$Sad[all.data$sad=="4"] <- 'Extremely'
all.data$Sad<-factor(c(all.data$Sad), levels = c("Neutral", "Extremely Not", "Somewhat Not","Somewhat","Extremely"))
#all.data$Sad<-relevel(all.data$Sad, "Neutral")
sooth.count.num
# sooth factor for model
all.data$Sooth[all.data$sooth=="0"] <- 'Extremely Not'
all.data$Sooth[all.data$sooth=="1"] <- 'Somewhat Not'
all.data$Sooth[all.data$sooth=="2"] <- 'Neutral'
all.data$Sooth[all.data$sooth=="3"] <- 'Somewhat'
all.data$Sooth[all.data$sooth=="4"] <- 'Extremely'
all.data$Sooth<-factor(c(all.data$Sooth), levels = c("Neutral", "Extremely Not", "Somewhat Not","Somewhat","Extremely"))
#all.data$Sooth<-relevel(all.data$Sooth, "Neutral")
# love factor for model
all.data$Love[all.data$love=="0"] <- 'Extremely Not'
all.data$Love[all.data$love=="1"] <- 'Somewhat Not'
all.data$Love[all.data$love=="2"] <- 'Neutral'
all.data$Love[all.data$love=="3"] <- 'Somewhat'
all.data$Love[all.data$love=="4"] <- 'Extremely'
all.data$Love<-factor(c(all.data$Love), levels = c("Neutral", "Extremely Not", "Somewhat Not","Somewhat","Extremely"))
#all.data$Love<-relevel(all.data$Love, "Neutral")
# exaggerated factor for model
all.data$Exaggerated[all.data$exaggerated=="0"] <- 'Extremely Not'
all.data$Exaggerated[all.data$exaggerated=="1"] <- 'Somewhat Not'
all.data$Exaggerated[all.data$exaggerated=="2"] <- 'Neutral'
all.data$Exaggerated[all.data$exaggerated=="3"] <- 'Somewhat'
all.data$Exaggerated[all.data$exaggerated=="4"] <- 'Extremely'
all.data$Exaggerated<-factor(c(all.data$Exaggerated), levels = c("Neutral", "Extremely Not", "Somewhat Not","Somewhat","Extremely"))
#all.data$Exaggerated<-relevel(all.data$Exaggerated, "Neutral")
# confidence variable
con.count<-ggplot(all.data, aes(confidence)) +
geom_bar(fill = "#0073C2FF") +
theme_pubclean()
con.count
con.count.num <- all.data %>%
group_by(confidence) %>%
summarise(counts = n())
con.count.num
con.means<-all.data %>%
group_by(nat_inf_label) %>%
summarise_at(vars(confidence), list(name = mean))
con.means
addressee.model<-glmer(nat_inf_labeln ~ 1 +
confidence +
Happy +
#Angry +
#Sad +
Sooth +
Love +
Exaggerated +
(1|recorded_childF),
data = all.data,
family = binomial (link = 'logit'))
summary(addressee.model)
